/*

*/

#include <iostream>
#include <string>

using namespace std;

class Dog0
{};
// is equivalent to

class Dog1 //
{
public:
    Dog1(){};    // default constructor is somffffehow tricky.
    // constructor with user-providing-parameters are default constructor :pS
    Dog1(const Dog1&){};
    Dog1& operator=(const Dog1&){};
    ~Dog1(){};
};

class Dog2
{
    std::string m_name;
public:
    Dog2(const string& s = "Bob"): m_name(s) { std::cout << m_name << " is born.
    " << std::endl; }
    ~Dog2(){ std::cout << m_name << " is destroyed." << std::endl; };
};

int main()
{
    Dog2 d1{"henry"};   // created "henry"
    Dog2 d2;    // created "Bob"
    d2 = d1;    // destroyed "Bob", destroyed "henry" binding with rvalue d1;

    return 0; // destroyed "henry"
}
